// Récupérer les détails d'un événement
elseif (preg_match('/^\/([^\/]+)$/', $path, $matches) && $method === 'GET') {
    header('Content-Type: application/json');
    $user = AuthMiddleware::requireAuth();
    $eventId = $matches[1];
    
    try {
        $event = $eventModel->findById($eventId);
        if (!$event) {
            http_response_code(404);
            echo json_encode(['error' => 'Événement non trouvé']);
            exit();
        }
        
        $members = $eventModel->getEventMembers($eventId);
        $membersResponse = [];
        foreach ($members as $member) {
            $membersResponse[] = [
                '_id' => $member['id'],
                'name' => $member['name']
            ];
        }
        
        $response = [
            '_id' => $event['id'],
            'name' => $event['name'],
            'description' => $event['description'] ?? '',
            'date' => $event['date'],
            'time' => $event['time'],
            'members' => $membersResponse,
            'createdBy' => [
                '_id' => $event['created_by'],
                'name' => $event['creator_name'] ?? 'Utilisateur inconnu'
            ],
            'createdAt' => $event['created_at'],
            'updatedAt' => $event['updated_at']
        ];
        
        echo json_encode($response);
        exit();
    } catch (Exception $e) {
        http_response_code(500);
        echo json_encode(['error' => 'Erreur lors de la récupération de l'\''événement']);
        exit();
    }
}

// Récupérer les messages d'un événement
elseif (preg_match('/^\/([^\/]+)\/messages$/', $path, $matches) && $method === 'GET') {
    header('Content-Type: application/json');
    $user = AuthMiddleware::requireAuth();
    $eventId = $matches[1];
    
    try {
        $event = $eventModel->findById($eventId);
        if (!$event) {
            http_response_code(404);
            echo json_encode(['error' => 'Événement non trouvé']);
            exit();
        }
        
        // Pour l'instant, retourner un tableau vide car la table messages n'existe pas encore
        $messages = [];
        
        echo json_encode($messages);
        exit();
    } catch (Exception $e) {
        http_response_code(500);
        echo json_encode(['error' => 'Erreur lors de la récupération des messages']);
        exit();
    }
}

