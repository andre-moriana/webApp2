// JavaScript pour la page de cr√©ation des tirs compt√©s
// S√©par√© du fichier principal pour respecter l'architecture

console.log('üöÄ scored-trainings-create.js charg√© (avant DOMContentLoaded)');

document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ DOMContentLoaded - scored-trainings-create.js initialis√©');
    
    // Attacher l'√©v√©nement de changement de type de tir
    const shootingTypeSelect = document.getElementById('shooting_type');
    console.log('üîç √âl√©ment shooting_type trouv√©:', shootingTypeSelect);
    
    if (shootingTypeSelect) {
        shootingTypeSelect.addEventListener('change', function(e) {
            console.log('üéØ √âv√©nement change d√©clench√© sur shooting_type:', e.target.value);
            updateShootingConfiguration();
        });
        console.log('‚úÖ Event listener attach√© au select shooting_type');
        
        // Test imm√©diat
        console.log('üß™ Test: valeur actuelle du select:', shootingTypeSelect.value);
    } else {
        console.warn('‚ö†Ô∏è √âl√©ment shooting_type non trouv√©');
        console.log('üîç √âl√©ments disponibles avec "shooting":', document.querySelectorAll('[id*="shooting"]'));
    }
});

// Configuration automatique selon le type de tir
function updateShootingConfiguration() {
    const shootingType = document.getElementById('shooting_type').value;
    const totalEndsInput = document.getElementById('total_ends');
    const arrowsPerEndInput = document.getElementById('arrows_per_end');
    
    console.log('üéØ updateShootingConfiguration appel√©e pour:', shootingType);
    
    // V√©rifier que les √©l√©ments existent
    if (!totalEndsInput || !arrowsPerEndInput) {
        console.error('‚ùå √âl√©ments total_ends ou arrows_per_end non trouv√©s');
        return;
    }
    
    // Configurations par d√©faut pour chaque type de tir
    const configurations = {
        'TAE': { totalEnds: 12, arrowsPerEnd: 6 },
        'Salle': { totalEnds: 20, arrowsPerEnd: 3 },
        '3D': { totalEnds: 24, arrowsPerEnd: 2 },
        'Nature': { totalEnds: 21, arrowsPerEnd: 2 },
        'Campagne': { totalEnds: 24, arrowsPerEnd: 3 },
        'Libre': { totalEnds: 10, arrowsPerEnd: 6 }
    };
    
    if (shootingType && configurations[shootingType]) {
        const config = configurations[shootingType];
        totalEndsInput.value = config.totalEnds;
        arrowsPerEndInput.value = config.arrowsPerEnd;
        
        // D√©clencher l'√©v√©nement input pour mettre √† jour l'aper√ßu
        totalEndsInput.dispatchEvent(new Event('input', { bubbles: true }));
        arrowsPerEndInput.dispatchEvent(new Event('input', { bubbles: true }));
        
        console.log(`‚úÖ Configuration automatique pour ${shootingType}: ${config.totalEnds} vol√©es, ${config.arrowsPerEnd} fl√®ches par vol√©e`);
    } else {
        console.log('‚ùå Type de tir non reconnu ou vide:', shootingType);
    }
}
